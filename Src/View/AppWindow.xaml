<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:ProjektIndywidualny.Properties"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:global="clr-namespace:"
    xmlns:viewModel="clr-namespace:ProjektIndywidualny.ViewModel"
    x:Class="ProjektIndywidualny.View.MainWindow"
    Title="{x:Static p:strings.Title}"
    mc:Ignorable="d"
    MinHeight="768" MinWidth="1024"
    Height="768" Width="1024"
    VerticalAlignment="Top" HorizontalAlignment="Left"
    FontSize="16" FontFamily="Century Gothic">
    <Window.DataContext>
        <viewModel:AppWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="250" />
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="250" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF838383" Offset="1" />
                        <GradientStop Color="#FFE8E8E8" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Pink" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="20" Text="!"
                                       ToolTip="{Binding ElementName=controlWithError, 
                                Path=(Validation.Errors)/ErrorContent}" />
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="250" />
        </Style>
    </Window.Resources>
    <Grid Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="400*" />
            <RowDefinition Height="100*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500*" />
            <ColumnDefinition Width="220*" />
        </Grid.ColumnDefinitions>

        <Image Margin="25" VerticalAlignment="Top" Stretch="UniformToFill" />

        <Canvas Grid.Row="0" Grid.Column="1" Margin="25,25,25,0" Width="250">
            <TextBlock>
                <Run Foreground="Red" Text="*" /><Run Text=" " />
                <Run Foreground="Black" Text="{x:Static p:strings.ChildGender}" />
            </TextBlock>
            <Canvas Canvas.Top="25">
                <RadioButton GroupName="GenderChoice" Canvas.Top="5" Canvas.Left="2" Width="50">
                    <WrapPanel>
                        <Image Source="/Resources/female-gender-icon.png" VerticalAlignment="Top"
                               HorizontalAlignment="Left" Width="15" Height="15" Margin="5, 2,0,0" />
                    </WrapPanel>
                </RadioButton>
            </Canvas>
            <Canvas Canvas.Top="50">
                <RadioButton GroupName="GenderChoice" Canvas.Left="60" Canvas.Top="-20" Width="50"
                             IsChecked="{Binding Path=Child.IsBoy, Mode=TwoWay}">
                    <WrapPanel>
                        <Image Source="/Resources/male-gender-icon.png" VerticalAlignment="Top" Width="15"
                               Margin="5, 2,0,0" />
                    </WrapPanel>
                </RadioButton>
            </Canvas>
            <TextBlock Padding="0,5,0,0">
                <Canvas.Top>
                    <system:Double>50</system:Double>
                </Canvas.Top>
                <Run Foreground="Red" Text="*" />
                <Run Foreground="Black" Text="{x:Static p:strings.ChildAge}" />
            </TextBlock>
            <TextBox x:Name="AgeTextBox" Canvas.Top="80" MaxLength="2" Height="25" FontSize="14"
                     VerticalContentAlignment="Center">
                <TextBox.Text>
                    <Binding Path="Child.Age" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True"
                             ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <global:OnlyNumbersValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="{x:Static p:strings.EnterChildAge}" FontSize="14" Foreground="gray"
                       IsHitTestVisible="False" Canvas.Left="5" Canvas.Top="83">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=AgeTextBox}" Value="">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Padding="0,5,0,0">
                <Canvas.Top>
                    <system:Double>105</system:Double>
                </Canvas.Top>
                <Run Foreground="Red" Text="*" />
                <Run Foreground="Black" Text="{x:Static p:strings.ChildHeight}" />
            </TextBlock>
            <TextBox x:Name="HeightTextBox" Canvas.Top="139" MaxLength="3" Height="25" FontSize="14"
                     VerticalContentAlignment="Center">
                <TextBox.Text>
                    <Binding Path="Child.CurrentHeight" UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnExceptions="True" ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <global:OnlyNumbersValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="{x:Static p:strings.EnterChildHeight}" FontSize="14" Foreground="gray"
                       IsHitTestVisible="False" Canvas.Left="5" Canvas.Top="142">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=HeightTextBox}" Value="">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Padding="0,5,0,0">
                <Canvas.Top>
                    <system:Double>160</system:Double>
                </Canvas.Top>
                <Run Foreground="Red" Text="*" />
                <Run Foreground="Black" Text="{x:Static p:strings.ChildWeight}" />
            </TextBlock>
            <TextBox x:Name="WeightTextBox" Canvas.Top="194" MaxLength="3" Height="25" FontSize="14"
                     VerticalContentAlignment="Center">
                <TextBox.Text>
                    <Binding Path="Child.CurrentWeight" UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnExceptions="True" ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <global:OnlyNumbersValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="{x:Static p:strings.EnterChildWeight}" FontSize="14" Foreground="gray"
                       IsHitTestVisible="False" Canvas.Left="5" Canvas.Top="197">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=WeightTextBox}" Value="">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{x:Static p:strings.WeightFileLabel}" TextWrapping="WrapWithOverflow" Height="50"
                       Canvas.Top="225" />
            <TextBox x:Name="WeightFileTextBox" Canvas.Top="275" FontSize="14" IsReadOnly="True"
                     TextWrapping="WrapWithOverflow" Height="60" TextAlignment="Justify" VerticalContentAlignment="Top">
                <TextBox.Text>
                    <Binding Path="FileDataLoader.WeightFileName" UpdateSourceTrigger="PropertyChanged" />
                </TextBox.Text>
            </TextBox>
            <Button Content="{x:Static p:strings.Default}" Canvas.Top="345" FontSize="14" Canvas.Left="25" Width="80"
                    Command="{Binding Path=DataContext.SetDefaultWeightFileCmd, UpdateSourceTrigger=PropertyChanged, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding ElementName=WeightFileTextBox}"
                    HorizontalAlignment="Left" />
            <Button Content="{x:Static p:strings.Choose}" Canvas.Top="345" Canvas.Right="25"
                    Width="80" FontSize="14" HorizontalAlignment="Right"
                    Command="{Binding Path=DataContext.SetCustomWeightFileCmd,  UpdateSourceTrigger=PropertyChanged, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding ElementName=WeightFileTextBox}" />
            <TextBlock Text="{x:Static p:strings.HeightFileLabel}" TextWrapping="WrapWithOverflow" Height="50"
                       Canvas.Top="370" />
            <TextBox x:Name="HeightFileTextBox" Canvas.Top="420" FontSize="14" IsReadOnly="True"
                     TextWrapping="WrapWithOverflow" Height="60" TextAlignment="Justify" VerticalContentAlignment="Top">
                <TextBox.Text>
                    <Binding Path="FileDataLoader.HeightFileName" UpdateSourceTrigger="PropertyChanged" />
                </TextBox.Text>
            </TextBox>
            <Button Content="{x:Static p:strings.Default}" Canvas.Top="490"
                    FontSize="14" Canvas.Left="25" Width="80"
                    Command="{Binding Path=DataContext.SetDefaultHeightFileCmd, UpdateSourceTrigger=PropertyChanged, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding ElementName=HeightFileTextBox}"
                    HorizontalAlignment="Left" />
            <Button Content="{x:Static p:strings.Choose}" Canvas.Top="490" Canvas.Right="25"
                    Width="80" FontSize="14" HorizontalAlignment="Right"
                    Command="{Binding Path=DataContext.SetCustomHeightFileCmd,  UpdateSourceTrigger=PropertyChanged, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding ElementName=HeightFileTextBox}" />
            <TextBlock>
                <Canvas.Top>
                    <system:Double>515</system:Double>
                </Canvas.Top>
                <Run Foreground="Red" Text="*" /><Run Text=" " />
                <Run Foreground="Red" Text="{x:Static p:strings.Required}" />
            </TextBlock>
        </Canvas>
        <Canvas Margin="50,25" Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Label Content="{x:Static p:strings.EstimatedHeightLabel}" Width="300" />
            <TextBox Width="60" Height="30" HorizontalContentAlignment="Center" IsReadOnly="True" Canvas.Left="300">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding Child.EstimatedHeight}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Child.EstimatedHeight}" Value="0">
                                <Setter Property="Text" Value="" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Label Content="{x:Static p:strings.EstimatedWeightLabel}" Width="300" Canvas.Top="50" />
            <TextBox Width="60" Height="30" HorizontalContentAlignment="Center" IsReadOnly="True" Canvas.Left="300"
                     Canvas.Top="50">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding Child.EstimatedWeight}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Child.EstimatedWeight}" Value="0">
                                <Setter Property="Text" Value="" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Canvas>

        <Button Content="{x:Static p:strings.EstimateButton}" Grid.Row="1" Grid.Column="1" Height="50"
                Margin="30,48,0,0" FontSize="14" HorizontalAlignment="Left" Width="250"
                VerticalAlignment="Top"
                Command="{Binding Path=DataContext.EstimateCmd, 
                      RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
    </Grid>
</Window>